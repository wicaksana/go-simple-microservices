services:
  # Frontend service.
  frontend:
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      - BACKEND_URL=http://backend:8081
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  # Backend service.
  backend:
    build:
      context: ./backend/
      dockerfile: ./Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=db 
      - DB_PORT=5432
      - DB_USER=gouser
      - DB_PASSWORD=gopassword
      - DB_NAME=godb
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
  


  # Database service. (postgres)
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=gouser
      - POSTGRES_PASSWORD=gopassword
      - POSTGRES_DB=godb
    volumes:
      - postgres_data:/var/lib/postgresql/data  # persist database across container restarts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gouser -d godb"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network
    restart: unless-stopped
networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
    driver: local