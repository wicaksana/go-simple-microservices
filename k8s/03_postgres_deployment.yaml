apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: go-microservice-app
  labels:
    app: postgres
spec:
  replicas: 1 # Run a single instance of PostgreSQL
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine # Using the same image as in docker-compose
          ports:
            - containerPort: 5432 # PostgreSQL default port
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres-password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres-db
            - name: PGDATA # Data directory
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data # Mount the PVC
          # Liveness and Readiness probes are crucial for production
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "gouser", "-d", "godb"]
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "gouser", "-d", "godb"]
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc # Use the PVC created earlier